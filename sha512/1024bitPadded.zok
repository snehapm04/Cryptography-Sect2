import "./1024bit" as sha512;

// A function that takes 2 u64[16] arrays as inputs, concatenates them, pads them,
// and returns their sha512 hash as a u64[8] (SHA-512 returns 512 bits, i.e., 8 x u64)
def main(u64[16] a, u64[16] b) -> u64[8] {

    // Padding is added to make the message fit into the 1024-bit block size
    // First dummy block (single "1" followed by padding "0"s)
    u64[16] dummyblock1 = [
        0x8000000000000000,  // "1" bit followed by zeros
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000
    ];

    // Second dummy block includes the total message length (2 * 512 bits = 1024 bits = 0x400 in hex)
    u64[16] dummyblock2 = [
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000400  // 1024 bits, message length in bits
    ];

    // Compute SHA-512 hash using the concatenated blocks
    return sha512(a, b, dummyblock1, dummyblock2);
}